---
interface Props {
  name: string;
  type: string;
}
const { name, type } = Astro.props;
---

<form class="" transition:persist>
  <div>
    <input
      type="text"
      name="product"
      id="product"
      class="hidden"
      value={`${type}: ${name}`}
    />
    <label for="checkIn">Check In</label>
    <input
      type="date"
      name="checkIn"
      id="checkIn"
      class="flatpickrCheckIn flatpickr"
      required
    />
  </div>
  <div>
    <label for="checkOut">Check Out</label>
    <input
      type="date"
      name="checkOut"
      id="checkOut"
      class="flatpickrCheckOut flatpickr"
      required
    />
  </div>
  <div>
    <label for="adults">Adultos</label>
    <select name="adults" id="adults" required>
      <option value="1">1</option>
      <option value="2" selected>2</option>
      <option value="3">3</option>
      <option value="4">4</option>
      <option value="5">5</option>
      <option value="6">6</option>
      <option value="7">7</option>
      <option value="8">8</option>
    </select>
  </div>
  <div>
    <label for="kids">Ninos</label>
    <select name="kids" id="kids">
      <option value="0">0</option>
      <option value="1">1</option>
      <option value="2">2</option>
      <option value="3">3</option>
      <option value="4">4</option>
      <option value="5">5</option>
      <option value="6">6</option>
      <option value="7">7</option>
      <option value="8">8</option>
    </select>
  </div>

  <button type="submit">Reservar</button>
</form>

<style>
  form {
    @apply grid grid-cols-1 place-content-stretch place-items-center gap-4 py-10 md:grid-cols-2	 lg:grid-cols-5;

    & div {
      @apply flex w-full flex-col items-start justify-between rounded-sm;

      & label {
        @apply py-2 rounded-sm font-medium;
      }

      & input[type="date"] {
        @apply min-w-full cursor-pointer rounded-sm px-5 py-2  lg:min-w-[300px];
      }

      & .flatpickr {
        @apply w-full px-5 py-3;
      }

      & select {
        @apply cursor-pointer rounded-sm px-5 py-3;
      }
    }

    & button[type="submit"] {
      @apply mx-auto mt-5 w-[200px] rounded-sm bg-blue-500 px-5 py-3
      font-bold text-white hover:bg-blue-700;
    }
  }
</style>

<script>
  import { actions } from "astro:actions";
  import flatpickr from "flatpickr";

  //  CALENDARIO
  document.addEventListener("astro:page-load", function () {
    const today = new Date();
    const twoDaysLater = new Date();
    twoDaysLater.setDate(today.getDate() + 2);

    flatpickr(".flatpickrCheckIn", {
      dateFormat: "d-m-Y", // Formato de fecha
      //locale: "es", // Cambia a espaÃ±ol
      defaultDate: today,
      minDate: today,
    });

    flatpickr(".flatpickrCheckOut", {
      dateFormat: "d-m-Y", // Formato de fecha
      //locale: "es", // Cambia a espaÃ±ol
      defaultDate: twoDaysLater,
      minDate: twoDaysLater,
    });
  });

  //*  FORMULARIO
  const form = document.querySelector("form") as HTMLFormElement;

  form.addEventListener("submit", async (e) => {
    e.preventDefault();

    try {
      const checkIn = (document.getElementById("checkIn") as HTMLInputElement)
        .value;
      const checkOut = (document.getElementById("checkOut") as HTMLInputElement)
        .value;

      if (!checkIn || !checkOut) {
        alert("Debe seleccionar la fecha correctamente");
        return;
      }
      // Validar que checkOut es posterior a checkIn
      if (checkIn >= checkOut) {
        alert("La fecha de CheckOut no puede ser anterior a la de CheckIn");
        return;
      }
      const formData = new FormData(form);

      const { data, error } = await actions.getReservationDetails(formData);
      if (error) {
        alert(error);
      }
      // console.log("ðŸš€ ~ form.addEventListener ~ data:", data);
      window.location.href = `/reservar/`;
    } catch (error) {
      alert(`Error: ${error}`);
    }
  });
</script>
