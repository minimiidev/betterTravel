---
interface Props {
  name: string;
  type: string;
  checkInTime: string;
  checkOutTime: string;
  price: number;
  currency: string;
  productUrl: string;
}
const { name, type, checkInTime, checkOutTime, price, currency, productUrl } =
  Astro.props;
console.log("ðŸš€ ~ productUrl:", productUrl);
---

<form class="" transition:persist>
  <div>
    <input
      type="text"
      name="productName"
      id="productName"
      class="hidden"
      value={`${name}`}
    />
    <input
      type="text"
      name="productType"
      id="productType"
      class="hidden"
      value={`${type}`}
    />
    <input
      type="text"
      name="checkInTime"
      id="checkInTime"
      class="hidden"
      value={`${checkInTime}`}
    />
    <input
      type="text"
      name="checkOutTime"
      id="checkOutTime"
      class="hidden"
      value={`${checkOutTime}`}
    />
    <input
      type="text"
      name="price"
      id="price"
      class="hidden"
      value={`${price}`}
    />
    <input
      type="text"
      name="currency"
      id="currency"
      class="hidden"
      value={`${currency}`}
    />
    <input
      type="text"
      name="productUrl"
      id="productUrl"
      class="hidden"
      value={`${productUrl}`}
    />
    <label for="checkInDate">Check In</label>
    <input
      type="date"
      name="checkInDate"
      id="checkInDate"
      class="flatpickrCheckIn flatpickr"
      required
    />
  </div>
  <div>
    <label for="checkOutDate">Check Out</label>
    <input
      type="date"
      name="checkOutDate"
      id="checkOutDate"
      class="flatpickrCheckOut flatpickr"
      required
    />
  </div>
  <div>
    <label for="adults">Adultos</label>
    <select name="adults" id="adults" required>
      <option value="1">1</option>
      <option value="2" selected>2</option>
      <option value="3">3</option>
      <option value="4">4</option>
      <option value="5">5</option>
      <option value="6">6</option>
      <option value="7">7</option>
      <option value="8">8</option>
    </select>
  </div>
  <div>
    <label for="kids">Ninos</label>
    <select name="kids" id="kids">
      <option value="0">0</option>
      <option value="1">1</option>
      <option value="2">2</option>
      <option value="3">3</option>
      <option value="4">4</option>
      <option value="5">5</option>
      <option value="6">6</option>
      <option value="7">7</option>
      <option value="8">8</option>
    </select>
  </div>

  <button type="submit">Reservar</button>
</form>

<style>
  form {
    @apply grid grid-cols-2 place-content-stretch place-items-center gap-4 py-10 	 lg:grid-cols-5;

    & div {
      @apply flex w-full flex-col items-start justify-between rounded-sm;

      & label {
        @apply py-2 rounded-sm font-medium;
      }

      & input[type="date"] {
        @apply min-w-full cursor-pointer rounded-sm px-5 py-2  lg:min-w-[300px];
      }

      & .flatpickr {
        @apply w-full px-5 py-3;
      }

      & select {
        @apply cursor-pointer rounded-sm w-full px-5 py-3;
      }
    }

    & button[type="submit"] {
      @apply mx-auto mt-5 w-[200px] rounded-sm bg-blue-500 px-5 py-3
      font-bold text-white hover:bg-blue-700 col-span-2 lg:col-span-1;
    }
  }
</style>

<script>
  import { actions } from "astro:actions";
  import flatpickr from "flatpickr";

  //  CALENDARIO
  document.addEventListener("astro:page-load", function () {
    const today = new Date();
    const twoDaysLater = new Date();
    twoDaysLater.setDate(today.getDate() + 2);

    flatpickr(".flatpickrCheckIn", {
      dateFormat: "d-m-Y", // Formato de fecha
      //locale: "es", // Cambia a espaÃ±ol
      defaultDate: today,
      minDate: today,
      disableMobile: true,
    });

    flatpickr(".flatpickrCheckOut", {
      dateFormat: "d-m-Y", // Formato de fecha
      //locale: "es", // Cambia a espaÃ±ol
      defaultDate: twoDaysLater,
      minDate: twoDaysLater,
      disableMobile: true,
    });
  });

  //*  FORMULARIO
  const form = document.querySelector("form") as HTMLFormElement;

  form.addEventListener("submit", async (e) => {
    e.preventDefault();

    try {
      const checkInInput = (
        document.getElementById("checkInDate") as HTMLInputElement
      ).value;
      const checkOutInput = (
        document.getElementById("checkOutDate") as HTMLInputElement
      ).value;

      if (!checkInInput || !checkOutInput) {
        alert("Debe seleccionar la fecha correctamente");
        return;
      }

      // Convertir las fechas de formato "d-m-Y" a objetos Date
      const [dayIn, monthIn, yearIn] = checkInInput.split("-");
      const [dayOut, monthOut, yearOut] = checkOutInput.split("-");

      const checkInDate = new Date(
        parseInt(yearIn),
        parseInt(monthIn) - 1, // Los meses en JS son 0-11
        parseInt(dayIn)
      );

      const checkOutDate = new Date(
        parseInt(yearOut),
        parseInt(monthOut) - 1,
        parseInt(dayOut)
      );

      // Validar que checkOut es posterior a checkIn
      if (checkInDate >= checkOutDate) {
        alert("La fecha de CheckOut no puede ser anterior a la de CheckIn");
        return;
      }
      const formData = new FormData(form);

      const { data, error } = await actions.getReservationDetails(formData);
      if (error) {
        alert(error);
      }
      window.location.href = `/reservar/`;
    } catch (error) {
      alert(`Error: ${error}`);
    }
  });
</script>
